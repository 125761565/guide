<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/beans" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:cache="http://www.springframework.org/schema/cache" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
       http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-4.0.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
       http://www.springframework.org/schema/cache 
       http://www.springframework.org/schema/cache/spring-cache-4.0.xsd
       http://www.springframework.org/schema/util 
       http://www.springframework.org/schema/util/spring-util-4.0.xsd">
        <!--开启spring注解模式 -->
	<context:annotation-config />
	
	<!-- 自动扫描 除controller注释的 -->
	<context:component-scan base-package="com.guide">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
      
      
      <!-- 引入连接池配置文件 -->
	<context:property-placeholder location="classpath*:properties/*.properties" />
	<bean id="DataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<!-- 连接数据库基本参数 -->
		<property name="url" value="${db.url}"></property>
		<property name="username" value="${db.user}"></property>
		<property name="password" value="${db.password}"></property>
		<!-- druid连接池加密 -->
		<!-- <property name="filters" value="config"></property> <property name="connectionProperties" 
			value="config.decrypt=true"></property> -->
		<property name="driverClassName" value="${db.driver}"></property>
		<!-- 初始化大小，最小，最大连接数 -->
		<property name="initialSize" value="${db.initialPoolSize}"></property>
		<property name="minIdle" value="${db.minPoolSize}"></property>
		<property name="maxActive" value="${db.maxpoolSize}"></property>

		<!-- 获取连接等待超时的时间 -->
		<property name="maxWait" value="${db.checkoutTimeout}"></property>
		<!-- 间隔检测时长,检测需要关闭的空闲连接，单位毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="${db.timeBetweenEvictionRunsMillis}"></property>
		<!-- 一个连接在池中最小生存的时间，单位毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="${db.minEvictableTimeMillis}"></property>

		<!-- ?? -->
		<property name="validationQuery" value="SELECT 'x'" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />


		<!-- 打开PSCache,并且指定每个连接上PSCache的大小 -->
		<property name="poolPreparedStatements" value="false"></property>
		<property name="maxPoolPreparedStatementPerConnectionSize"
			value="20"></property>
		<!-- 配置监控统计拦截的filters,去掉后监控界面sql无法统计 -->
		<!-- <property name="filters" value="stat"/> -->
	</bean>  
	
	<!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="DataSource"></property>
		<property name="configLocation" value="classpath:mybatis/mybatis.xml"></property>
		<property name="mapperLocations" value="classpath:mapper/*.xml"></property>
		<property name="typeAliasesPackage" value="com.guide.entity"></property>
	</bean>
	
	<!-- DAO接口所在包名，Spring会自动查找其下的类 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.guide.dao"></property>
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>
     
    <!-- 定义事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="DataSource"></property>
	</bean>	
	<!-- 定义切面，在 .service 中执行有关的事务操作 -->
	<aop:config>
		<aop:pointcut id="serviceOperation"
			expression="execution(* com.guide.service.*.*.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="serviceOperation" />
	</aop:config>

	<!-- 启用对事务注解的支持 -->
	<tx:annotation-driven transaction-manager="transactionManager" />
	<!-- 定义 Autowired 自动注入 bean -->
	<bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor" />

	
 
        
</beans>